# ===============================================
# MOTIONTRACKER FRONTEND - DOCKERFILE PRODUÇÃO
# ===============================================

# ===============================================
# STAGE 1: Dependencies
# ===============================================
FROM node:20-alpine AS deps

WORKDIR /app

# Instalar dependências
RUN apk add --no-cache libc6-compat curl

# Copiar arquivos de dependências
COPY package.json ./
COPY package-lock.json ./
RUN npm install && npm cache clean --force

# ===============================================
# STAGE 2: Builder
# ===============================================
FROM node:20-alpine AS builder

WORKDIR /app

# Copiar dependências
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Configurar variáveis de ambiente para build
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Build da aplicação
RUN npm run build

# ===============================================
# STAGE 3: Runner
# ===============================================
FROM node:20-alpine AS runner

WORKDIR /app

# Criar usuário não-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copiar arquivos necessários do builder
COPY --from=builder /app/next.config.js ./
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json

# Copiar arquivos de build do Next.js
COPY --from=builder --chown=nextjs:nodejs /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules

# Mudar para usuário não-root
USER nextjs

# Configurar variáveis de ambiente
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Expor porta
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000 || exit 1

# Comando de inicialização
CMD ["npm", "start"]